/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutServicesIdRouteImport } from './routes/_layout/services/$id'
import { Route as LayoutNewsIdRouteImport } from './routes/_layout/news/$id'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutServicesIdRoute = LayoutServicesIdRouteImport.update({
  id: '/services/$id',
  path: '/services/$id',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutNewsIdRoute = LayoutNewsIdRouteImport.update({
  id: '/news/$id',
  path: '/news/$id',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof LayoutIndexRoute
  '/news/$id': typeof LayoutNewsIdRoute
  '/services/$id': typeof LayoutServicesIdRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/news/$id': typeof LayoutNewsIdRoute
  '/services/$id': typeof LayoutServicesIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/news/$id': typeof LayoutNewsIdRoute
  '/_layout/services/$id': typeof LayoutServicesIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/news/$id' | '/services/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/news/$id' | '/services/$id'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/news/$id'
    | '/_layout/services/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/services/$id': {
      id: '/_layout/services/$id'
      path: '/services/$id'
      fullPath: '/services/$id'
      preLoaderRoute: typeof LayoutServicesIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/news/$id': {
      id: '/_layout/news/$id'
      path: '/news/$id'
      fullPath: '/news/$id'
      preLoaderRoute: typeof LayoutNewsIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutNewsIdRoute: typeof LayoutNewsIdRoute
  LayoutServicesIdRoute: typeof LayoutServicesIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutNewsIdRoute: LayoutNewsIdRoute,
  LayoutServicesIdRoute: LayoutServicesIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
